/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI;

import ENTITY.*;
import Helper.XExcel;
import Helper.XExcelTK;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import org.apache.poi.hpsf.ClassID;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.BuiltinFormats;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DataFormat;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellReference;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Admin
 */
public class ThongKeForm extends javax.swing.JInternalFrame {

    DefaultTableModel tblModel;
    Connection cnn = null;
    Date date;
    NumberFormat formatter = new DecimalFormat("####");
//    ArrayList<SanPham> ListSP = new ArrayList<>();
    ArrayList<ThongKe> ListTK = new ArrayList<>();
    ArrayList<ThongKeHoaDon> ListTKHD = new ArrayList<>();
    ArrayList<HoaDon> ListHD = new ArrayList<>();

    JPanel p1 = null;
    JLabel TL1 = null;
    JLabel l1 = null;
    JPanel p2 = null;
    JLabel TL2 = null;
    JLabel l2 = null;
    JPanel p3 = null;
    JLabel TL3 = null;
    JLabel l3 = null;

    /**
     * Creates new form ThongKeForm
     */
    public ThongKeForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        init();
        Connect();
        LoadTheLoaiThongKe();
        LoadToCBOYear();
        LoadHienThongKe();
        FillhoadonToArrayhoadon();
        FillToTableHoaDon();
        FillDanhSachToArrayThongke();
//        GetThongKeMail();
        FillToTable();
        HienThiThongKeSP();
        RunBieuDo();
//        ThongKeEST();
    }

    public void Connect() {
        try {
            String user = "edu";
            String pass = "123";
            String url = "jdbc:sqlserver://localhost:1433;databaseName=duan1;encrypt=true;trustServerCertificate=true;";
            cnn = DriverManager.getConnection(url, user, pass);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối");
        }
    }

    public void init() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new Object[]{"MaSP", "Sản Phẩm", "Số Lượng", "Tổng Tiền"});
        tblDoanhThu.setModel(tblModel);
        chkbang.setSelected(true);
    }

    public String Getnam() {
        return (String) cboyear.getSelectedItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tbpdoanhthu = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        cboyear = new javax.swing.JComboBox<>();
        chkbang = new javax.swing.JRadioButton();
        chkbieudo = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnxuatexcel = new javax.swing.JButton();
        btnthongketop = new javax.swing.JButton();
        pnlthongke = new javax.swing.JPanel();
        pnlThongkebieudo = new javax.swing.JPanel();
        pnlthongketrong = new javax.swing.JPanel();
        lbldtsp = new javax.swing.JLabel();
        doanhthu = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        pnlhoadon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhoadon = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        datehoadon = new com.toedter.calendar.JDateChooser();
        btnlochoadon = new javax.swing.JButton();
        btnbieudohoadon = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbldoanhthu = new javax.swing.JLabel();
        cboloaithongke = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        lblngaybatdau = new javax.swing.JLabel();
        lblngayketthuc = new javax.swing.JLabel();
        dateketthuc = new com.toedter.calendar.JDateChooser();
        datebatdau = new com.toedter.calendar.JDateChooser();
        btntimkiem = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblsohoadon = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblsosanpham = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lbltongkhachhang = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(990, 690));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THỐNG KÊ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(428, 428, 428)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1000, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbpdoanhthu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboyearActionPerformed(evt);
            }
        });
        jPanel3.add(cboyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 170, -1));

        buttonGroup1.add(chkbang);
        chkbang.setText("Bảng");
        chkbang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbangActionPerformed(evt);
            }
        });
        jPanel3.add(chkbang, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        buttonGroup1.add(chkbieudo);
        chkbieudo.setText("Biểu Đồ");
        chkbieudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbieudoActionPerformed(evt);
            }
        });
        jPanel3.add(chkbieudo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));

        jLabel9.setText("Lựa Chọn Hiển Thị");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jButton1.setText("Gửi Báo Cáo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 161, -1, 30));

        btnxuatexcel.setText("Xuất Thống Kê Excel");
        btnxuatexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxuatexcelActionPerformed(evt);
            }
        });
        jPanel3.add(btnxuatexcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 210, -1, 30));

        btnthongketop.setText("Thống Kê EST");
        btnthongketop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthongketopActionPerformed(evt);
            }
        });
        jPanel3.add(btnthongketop, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 161, 131, 31));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 260, 390));

        pnlthongke.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION)));
        pnlthongke.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlThongkebieudo.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongkebieudo.setLayout(new javax.swing.BoxLayout(pnlThongkebieudo, javax.swing.BoxLayout.LINE_AXIS));
        pnlthongke.add(pnlThongkebieudo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-8, 2, 740, 370));

        pnlthongketrong.setBackground(new java.awt.Color(255, 255, 255));
        pnlthongketrong.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbldtsp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbldtsp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldtsp.setText("Doanh Thu Sản Phẩm");
        pnlthongketrong.add(lbldtsp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 200, 30));

        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaSP", "TenSP", "Số Lượng", "Tổng Tiền"
            }
        ));
        doanhthu.setViewportView(tblDoanhThu);

        pnlthongketrong.add(doanhthu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 730, 340));

        pnlthongke.add(pnlthongketrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(-8, -8, 750, 370));

        jPanel2.add(pnlthongke, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 730, 380));

        tbpdoanhthu.addTab("Doanh Thu", jPanel2);

        pnlhoadon.setBackground(new java.awt.Color(255, 255, 255));
        pnlhoadon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblhoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MaHD", "MaNV", "MaKH", "TenNV", "TenKH", "Thành Tiền", "Ngày Mua"
            }
        ));
        tblhoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblhoadonMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblhoadon);

        pnlhoadon.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, 990, 320));

        jLabel6.setText("NGÀY");
        pnlhoadon.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 14, -1, 20));

        datehoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datehoadonMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                datehoadonMousePressed(evt);
            }
        });
        pnlhoadon.add(datehoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 14, 111, -1));

        btnlochoadon.setText("Lọc");
        btnlochoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlochoadonActionPerformed(evt);
            }
        });
        pnlhoadon.add(btnlochoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 11, -1, -1));

        btnbieudohoadon.setText("Biểu Đồ");
        btnbieudohoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbieudohoadonActionPerformed(evt);
            }
        });
        pnlhoadon.add(btnbieudohoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, -1, -1));

        tbpdoanhthu.addTab("Hóa Đơn", pnlhoadon);

        jPanel1.add(tbpdoanhthu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 990, 410));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));
        jPanel6.setToolTipText("");
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Doanh Thu");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 190, -1));

        lbldoanhthu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldoanhthu.setText("0");
        jPanel6.add(lbldoanhthu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, -1));

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 90));

        cboloaithongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboloaithongkeActionPerformed(evt);
            }
        });
        jPanel5.add(cboloaithongke, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 75, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Loại Thời Gian");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        lblngaybatdau.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblngaybatdau.setText("Ngày Bắt Đầu");
        jPanel5.add(lblngaybatdau, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, 20));

        lblngayketthuc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblngayketthuc.setText("Ngày Kết Thúc");
        jPanel5.add(lblngayketthuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, -1, 20));
        jPanel5.add(dateketthuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 111, -1));
        jPanel5.add(datebatdau, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 111, -1));

        btntimkiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btntimkiem.setText("Thống Kê");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });
        jPanel5.add(btntimkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 140, -1, 31));

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(0, 153, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tổng Hóa Đơn");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 180, -1));

        lblsohoadon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblsohoadon.setText("0");
        jPanel7.add(lblsohoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 180, -1));

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 180, 90));

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Số sản phẩm");
        jPanel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 180, -1));

        lblsosanpham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblsosanpham.setText("0");
        jPanel8.add(lblsosanpham, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 180, -1));

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 180, 90));

        jPanel9.setBackground(new java.awt.Color(0, 153, 153));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(0, 153, 153));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Tổng Khách hàng");
        jPanel9.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 190, -1));

        lbltongkhachhang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltongkhachhang.setText("0");
        jPanel9.add(lbltongkhachhang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, -1));

        jPanel5.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 190, 90));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 990, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 47, 1000, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboyearActionPerformed
        // TODO add your handling code here:
        if (String.valueOf(cboyear.getSelectedItem()).equalsIgnoreCase(" ")) {
            FillDanhSachToArrayThongke();
            FillToTable();
            RunBieuDo();
        } else {
            timthongketheonam();
            FillToTable();
            RunBieuDo();
        }

//        GetESTKhachHang();
//        GetESTNhanVien();
//        GetESTSanPham();
    }//GEN-LAST:event_cboyearActionPerformed

    private void cboloaithongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboloaithongkeActionPerformed
        // TODO add your handling code here:
        LoadHienThongKe();
    }//GEN-LAST:event_cboloaithongkeActionPerformed

    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
        // TODO add your handling code here:
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String bd = String.valueOf(sdf.format(datebatdau.getDate()));
        String kt = String.valueOf(sdf.format(dateketthuc.getDate()));
        LoadThongKe(bd, kt);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu và ngày kết thúc không được để trống");
        }
        
    }//GEN-LAST:event_btntimkiemActionPerformed

    private void chkbangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbangActionPerformed
        // TODO add your handling code here:
        HienThiThongKeSP();
    }//GEN-LAST:event_chkbangActionPerformed

    private void chkbieudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbieudoActionPerformed
        // TODO add your handling code here:
        HienThiThongKeSP();
    }//GEN-LAST:event_chkbieudoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        GuiBaoCaoTK bctk = new GuiBaoCaoTK();
        bctk.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnthongketopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthongketopActionPerformed
        // TODO add your handling code here:
        ThongKeEST tkest = new ThongKeEST((String) cboyear.getSelectedItem());
        tkest.setLocationRelativeTo(null);
        tkest.setVisible(true);
    }//GEN-LAST:event_btnthongketopActionPerformed

    private void btnxuatexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxuatexcelActionPerformed
        // TODO add your handling code here:
        export();
    }//GEN-LAST:event_btnxuatexcelActionPerformed

    private void btnlochoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlochoadonActionPerformed
        // TODO add your handling code here:
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dhd = String.valueOf(sdf.format(datehoadon.getDate()));
            ThongKeHoadon(dhd);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ngày tìm không được để trống");
        }
            
        

    }//GEN-LAST:event_btnlochoadonActionPerformed

    private void datehoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datehoadonMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_datehoadonMouseClicked

    private void datehoadonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datehoadonMousePressed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dhd = String.valueOf(sdf.format(datehoadon.getDate()));
        ThongKeHoadon(dhd);
    }//GEN-LAST:event_datehoadonMousePressed

    private void btnbieudohoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbieudohoadonActionPerformed
        // TODO add your handling code here:
        BieuDoHoaDon();

    }//GEN-LAST:event_btnbieudohoadonActionPerformed

    private void tblhoadonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhoadonMousePressed
        // TODO add your handling code here:
          new CTHoaDonForm().setVisible(true);
        try {
            int index = tblhoadon.getSelectedRow();
            TableModel model = tblhoadon.getModel();
            String id = (String) model.getValueAt(index, 0);
 
         CTHoaDonForm.hdn3.txt1.setText(id);

        } catch (Exception e) {
            System.out.println("fm" + e);
        }
    }//GEN-LAST:event_tblhoadonMousePressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeForm().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbieudohoadon;
    private javax.swing.JButton btnlochoadon;
    private javax.swing.JButton btnthongketop;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btnxuatexcel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboloaithongke;
    private javax.swing.JComboBox<String> cboyear;
    private javax.swing.JRadioButton chkbang;
    private javax.swing.JRadioButton chkbieudo;
    private com.toedter.calendar.JDateChooser datebatdau;
    private com.toedter.calendar.JDateChooser datehoadon;
    private com.toedter.calendar.JDateChooser dateketthuc;
    private javax.swing.JScrollPane doanhthu;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldoanhthu;
    private javax.swing.JLabel lbldtsp;
    private javax.swing.JLabel lblngaybatdau;
    private javax.swing.JLabel lblngayketthuc;
    private javax.swing.JLabel lblsohoadon;
    private javax.swing.JLabel lblsosanpham;
    private javax.swing.JLabel lbltongkhachhang;
    private javax.swing.JPanel pnlThongkebieudo;
    private javax.swing.JPanel pnlhoadon;
    private javax.swing.JPanel pnlthongke;
    private javax.swing.JPanel pnlthongketrong;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblhoadon;
    private javax.swing.JTabbedPane tbpdoanhthu;
    // End of variables declaration//GEN-END:variables

    public void LoadTheLoaiThongKe() {
        try {
            String[] thang = {"Hôm Nay", "Theo Ngày"};
            for (String s : thang) {
                cboloaithongke.addItem(s);
            }
        } catch (Exception e) {
            System.out.println(e + "5555");
        }
    }

    public void LoadHienThongKe() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            if (String.valueOf(cboloaithongke.getSelectedItem()).equals("Hôm Nay")) {
                String bd = String.valueOf(sdf.format(new Date()));
                String kt = String.valueOf(sdf.format(new Date()));
                LoadThongKe(bd, kt);
                lblngaybatdau.setVisible(false);
                lblngayketthuc.setVisible(false);
                datebatdau.setVisible(false);
                dateketthuc.setVisible(false);
                btntimkiem.setVisible(false);
            } else {
                lblngaybatdau.setVisible(true);
                lblngayketthuc.setVisible(true);
                datebatdau.setVisible(true);
                dateketthuc.setVisible(true);
                btntimkiem.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e + "lỗi nè");
        }
    }

    public void FillDanhSachToArrayThongke() {
        try {
            String sql = "select Masp,tensp,sum(Soluong) as N'Soluong', sum(tongtien) as N'tongtien' from hoadonchitiet\n"
                    + "group by Masp,tensp";
            Statement st = cnn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ListTK.clear();
            while (rs.next()) {
                String masp = rs.getString(1);
                String tensp = rs.getString(2);
                int soluong = rs.getInt(3);
//                int dongia = rs.getInt(4);
                long thanhtien = rs.getLong(4);
//                double tt = Double.parseDouble(thanhtien);
                ThongKe tk = new ThongKe(masp, tensp, soluong, thanhtien);
                ListTK.add(tk);
            }
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex + " gi vay ak");
            JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
        }
    }

    public void LoadThongKe(String nbd, String nkt) {
        try {

            String sql = "{call sp_ThongKeDoanhThuall (?,?)}";
            PreparedStatement ps = cnn.prepareStatement(sql);
            ps.setString(1, nbd);
            ps.setString(2, nkt);
            ResultSet rs = ps.executeQuery();
            int sohd = 0;
            int soluong = 0;
            int sokh = 0;
            int kqsp = 0;
            long kqtt = 0;
            while (rs.next()) {
                String mahd = rs.getString(1);
                if (!mahd.isEmpty() || mahd != null) {
                    sohd++;
                }
                String tenkh = rs.getString(2);
                if (!tenkh.isEmpty() || tenkh != null) {
                    sokh++;
                }
                int sl = rs.getInt(3);
                soluong += sl;
                long tongtien = rs.getLong(4);
                kqtt += tongtien;
                ThongKeHoaDon tk = new ThongKeHoaDon(sohd, sokh, soluong, kqtt);
                ListTKHD.add(tk);
            }
            FillThongKeHD();
            ps.close();
            rs.close();

        } catch (Exception e) {
            System.out.println(e + "12345");
        }
    }

    public void FillThongKeHD() {
        for (ThongKeHoaDon tk : ListTKHD) {
            lbldoanhthu.setText(String.valueOf(tk.getTongtien()) + " VND");
            lblsohoadon.setText(String.valueOf(tk.getMahd()));
            lblsosanpham.setText(String.valueOf(tk.getSoluong()));
            lbltongkhachhang.setText(String.valueOf(tk.getMasp()));
        }
    }

    public void HienThiThongKeSP() {
        tblModel = (DefaultTableModel) tblDoanhThu.getModel();
        if (chkbang.isSelected()) {
            pnlthongketrong.setVisible(true);
            pnlThongkebieudo.setVisible(false);
//            pnlEST.setVisible(false);
        } else if (chkbieudo.isSelected()) {
//            pnlEST.setVisible(false);
            pnlthongketrong.setVisible(false);
            pnlThongkebieudo.setVisible(true);
        }
//        else if (rdoEST.isSelected()) {
//            
//            pnlEST.setVisible(true);
//            pnlthongketrong.setVisible(false);
//            pnlThongkebieudo.setVisible(false);
//            GetESTKhachHang();
//            GetESTSanPham();
//            GetESTNhanVien();
//        }
    }

//    public void ThongKeEST() {
//        //panel 1
//        p1 = new JPanel();
//        
//        p1.setBackground(Color.GRAY);
//        p1.setSize(100, 500);
//        TL1 = new JLabel("Khách Hàng Mua Nhiều Nhất");
//        
//        TL1.setAlignmentX(Component.CENTER_ALIGNMENT);
//        TL1.setSize(1000, 1000);
//        l1 = new JLabel("EST 1");
//        l1.setAlignmentX(Component.CENTER_ALIGNMENT);
//
//        p1.setLayout(new BoxLayout(p1, BoxLayout.Y_AXIS));
//        p1.add(TL1);
//        p1.add(l1);
//        p1.setPreferredSize(new Dimension(200, 100));
//
////        p1.setAlignmentX(Component.CENTER_ALIGNMENT);
//        //panel 2
//        p2 = new JPanel();
//        p2.setBackground(Color.RED);
//        
//        TL2 = new JLabel("Sản Phẩm Có Doanh Thu Nhiều Nhất");
//        TL2.setAlignmentX(Component.CENTER_ALIGNMENT);
//        l2 = new JLabel("EST 2");
//        l2.setAlignmentX(Component.CENTER_ALIGNMENT);
//        
//        p2.setLayout(new BoxLayout(p2, BoxLayout.Y_AXIS));
//        p2.add(TL2);
//        p2.add(l2);
//        p2.setPreferredSize(new Dimension(200, 100));
//
//        //panel 3
//        p3 = new JPanel();
//        p3.setBackground(Color.PINK);
//        
//        TL3 = new JLabel("Nhân Viên Bán Nhiều Nhất");
//        TL3.setAlignmentX(Component.CENTER_ALIGNMENT);
//        l3 = new JLabel("EST 3");
//        l3.setAlignmentX(Component.CENTER_ALIGNMENT);
//        
//        p3.setLayout(new BoxLayout(p3, BoxLayout.Y_AXIS));
//        p3.add(TL3);
//        p3.add(l3);
//        p3.setPreferredSize(new Dimension(200, 100));
//        pnlEST.removeAll();
//        pnlEST.add(p1);
//        pnlEST.add(p2);
//        pnlEST.add(p3);
//        pnlEST.setLayout(new FlowLayout(10, 10, 80));
//        pnlEST.updateUI();
//    }
//    public void FillDoanhThu() {
//        for (danhsach ds : ListDS) {
//            lbldoanhthu.setText(String.valueOf(ds.getThanhtien()));
//            lblsohoadon.setText(String.valueOf(ds.getSohd()));
//            lblsosanpham.setText(String.valueOf(ds.getSosp()));
//            lbltongkhachhang.setText(String.valueOf(ds.getSokh()));
//        }
//    }
//    public void FillSanPhamToArray() {
//        try {
//            String sql = "select Tensp, DonGia from SanPham";
//            Statement st = cnn.createStatement();
//            ResultSet rs = st.executeQuery(sql);
//            while (rs.next()) {
//                String ten = rs.getString(1);
//                double dongia = rs.getInt(2);
//                SanPham s = new SanPham(ten, dongia);
//                ListSP.add(s);
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
    public void FillToTable() {
        try {
            tblModel = (DefaultTableModel) tblDoanhThu.getModel();
            tblModel.setRowCount(0);
            for (ThongKe TE : ListTK) {
                tblModel.addRow(new Object[]{
                    TE.getMaSP(), TE.getTensp(), TE.getSoluong(), TE.getThanhtien()
                });
            }
        } catch (Exception e) {
            System.out.println(e + "alo");
        }
    }

    public void LoadToCBOYear() {
        try {
            String[] nam = {" ", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022"};
            for (String string : nam) {
                cboyear.addItem(string);
            }
        } catch (Exception e) {
            System.out.println(e + " kkkkkk");
        }
    }

    public void timthongketheonam() {
        try {
            String sql = "{call sp_ThongKeDoanhThu (?)}";
            PreparedStatement stmt = cnn.prepareStatement(sql);
            stmt.setString(1, (String) cboyear.getSelectedItem());
            ResultSet rs = stmt.executeQuery();
            ListTK.clear();
            while (rs.next()) {
                String masp = rs.getString(1);
                String tensp = rs.getString(2);
                int soluong = rs.getInt(3);
                long thanhtien = rs.getLong(4);
                ThongKe tk = new ThongKe(masp, tensp, soluong, thanhtien);
                ListTK.add(tk);
            }
            stmt.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e + " 987654");
        }
    }

    //Biểu Đồ Thống Kê
    public JFreeChart createChart() {
        JFreeChart barChart = ChartFactory.createBarChart3D(
                "BIỂU ĐỒ THỐNG KẾ SẢN PHẨM",
                "SẢN PHẨM", "SỐ LƯỢNG",
                createDataset(), PlotOrientation.VERTICAL, false, false, false);
        return barChart;
    }

    public int getcounttable() {
        tblModel = (DefaultTableModel) tblDoanhThu.getModel();
        int count = tblModel.getRowCount();
        return count;
    }

    public CategoryDataset createDataset() {
        tblModel = (DefaultTableModel) tblDoanhThu.getModel();
        int count = tblModel.getRowCount();
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < count; i++) {
            dataset.addValue((Number) tblModel.getValueAt(i, 2), "SỐ LƯỢNG", (Comparable) tblModel.getValueAt(i, 0));
        }
        return dataset;
    }

    public void RunBieuDo() {
//        ChartPanel chartPanel = new ChartPanel(createChart());
//        chartPanel.setPreferredSize(new java.awt.Dimension(540, 300));
//        chartPanel.setVisible(true);
//        chartPanel.setName("Biểu Đồ Thống Kê");
//        ChartFrame chartframe = new ChartFrame("Biểu Đồ Thống Kê", createChart(),true);
//        chartframe.setVisible(true);
//        chartframe.setSize(550,300);
        ChartPanel charpanel = new ChartPanel(createChart());
        pnlThongkebieudo.removeAll();
        pnlThongkebieudo.add(charpanel);
        pnlThongkebieudo.updateUI();
//        JTabbedPane td = new JTabbedPane();
//        td.setName("Biểu Đồ");
//        td.add(chartPanel);
//        pnlthongke.add(chartPanel);
//        tbpdoanhthu.add(chartPanel);

//        JFrame frame = new JFrame();
//        frame.add(chartPanel);
//        frame.setTitle("Biểu đồ JFreeChart trong Java Swing");
//        frame.setSize(600, 400);
//        frame.setLocationRelativeTo(null);
//        frame.setResizable(false);
//        frame.setVisible(true);
//        return chartPanel;
    }

//    public void GetESTKhachHang() {
//        
//        try {
//            String sql = "{call sp_ESTKhachMua(?)}";
//            PreparedStatement st = cnn.prepareStatement(sql);
//            st.setString(1, (String) cboyear.getSelectedItem());
//            ResultSet rs = st.executeQuery();
//            String tenkh = null;
//            String slkm = null;
//            while (rs.next()) {
//                tenkh = rs.getString(1);
//                slkm = rs.getString(2);
//                break;
//            }
//            if (tenkh==null) {
//                l1.setText("không có dữ liệu");
//            } else {
//                l1.setText(tenkh);
//            }
////            pnlEST.updateUI();
//            rs.close();
//            st.close();
//            
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//        
//    }
//    
//    public void GetESTSanPham() {
//        try {
//            String sql = "{call sp_ESTSanPham(?)}";
//            PreparedStatement st = cnn.prepareStatement(sql);
//            st.setString(1, (String) cboyear.getSelectedItem());
//            ResultSet rs = st.executeQuery();
//            String tensp = null;
//            String slsp = null;
//            while (rs.next()) {
//                tensp = rs.getString(1);
//                slsp = rs.getString(2);
//                break;
//            }
//            if (tensp==null) {
//                l2.setText("không có dữ liệu");
//            } else {
//                l2.setText(tensp);
//            }
////            pnlEST.updateUI();
//            rs.close();
//            st.close();
//            
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
//    
//    public void GetESTNhanVien(){
//        try {
//            String sql = "{call sp_ESTNhanVien(?)}";
//            PreparedStatement st = cnn.prepareStatement(sql);
//            st.setString(1, (String) cboyear.getSelectedItem());
//            ResultSet rs = st.executeQuery();
//            String tennv = null;
//            String slnv = null;
//            while (rs.next()) {
//                tennv = rs.getString(1);
//                slnv = rs.getString(2);
//                break;
//            }
//            if (tennv==null) {
//                l3.setText("không có dữ liệu");
//            } else {
//                l3.setText(tennv);
//            }
////            pnlEST.updateUI();
//            rs.close();
//            st.close();
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
//    public void GetThongKeMail(){
//        String thanhtien = lbldoanhthu.getText();
//        String hd = lblsohoadon.getText();
//        String sp = lblsosanpham.getText();
//        String kh = lbltongkhachhang.getText();
//    }
    //EXPORT FILE EXCEL
    public void export() {
        JFileChooser jfc = new JFileChooser(".");
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String path = jfc.getSelectedFile().getName();
            try {
                XExcelTK.exportExcel(path, ListTK, ListHD);
                JOptionPane.showMessageDialog(this, "Export File Success");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't Export File !");
            }
        }
    }

    //CTHOADON
    public void FillhoadonToArrayhoadon() {
        try {
            String sql = "select MaHD,MaNV,MaKH,Tennv,Tenkh,Thanhtien,Ngaytaodon from HoaDon";
            Statement st = cnn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String mahd = rs.getString(1);

                String manv = rs.getString(2);

                String makh = rs.getString(3);

                String tennv = rs.getString(4);

                String tenkh = rs.getString(5);

                long tt = rs.getLong(6);

                Date d = rs.getDate(7);

                HoaDon hd = new HoaDon(mahd, makh, manv, tennv, tenkh, tt, d);
                ListHD.add(hd);
            }
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
        }
    }

    public void ThongKeHoadon(String nbd) {
        try {

            String sql = "{call sp_ThongKehoadonall (?)}";
            PreparedStatement ps = cnn.prepareStatement(sql);
            ps.setString(1, nbd);
            ResultSet rs = ps.executeQuery();
            ListHD.clear();
            while (rs.next()) {
                String mahd = rs.getString(1);

                String manv = rs.getString(2);

                String makh = rs.getString(3);

                String tennv = rs.getString(4);

                String tenkh = rs.getString(5);

                long tt = rs.getLong(6);

                Date d = rs.getDate(7);

                HoaDon hd = new HoaDon(mahd, makh, manv, tennv, tenkh, tt,d);
                ListHD.add(hd);
            }
            FillToTableHoaDon();
            ps.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e + "12345");
        }
    }

    public void FillToTableHoaDon() {
        try {
            tblModel = (DefaultTableModel) tblhoadon.getModel();
            tblModel.setRowCount(0);
            for (HoaDon hd : ListHD) {
                tblModel.addRow(new Object[]{
                    hd.getMahd(), hd.getManv(), hd.getMakh(), hd.getTennv(), hd.getTenkh(), hd.getThanhtien(), hd.getNgaymua()
                });
            }
        } catch (Exception e) {
            System.out.println(e + "alo");
        }
    }

    public void BieuDoHoaDon() {
        tblModel = (DefaultTableModel) tblhoadon.getModel();
        int c = tblModel.getRowCount();

        int count = tblModel.getRowCount();
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < c; i++) {
            dataset.addValue((Number) tblModel.getValueAt(i, 5), "SỐ LƯỢNG", (Comparable) tblModel.getValueAt(i, 0));
        }

        JFreeChart barChart = ChartFactory.createBarChart(
                "BIỂU ĐỒ THỐNG KÊ HÓA ĐƠN",
                "Năm", "Số hóa đơn",
                dataset, PlotOrientation.VERTICAL, false, false, false);

        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
        JFrame frame = new JFrame();
        frame.add(chartPanel);
        frame.setTitle("Biểu đồ Hóa Đơn");
        frame.setSize(600, 400);
        frame.setLocationRelativeTo(null);
        frame.setResizable(false);
        frame.setVisible(true);
    }
}
