/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UI;

import DAO.AccountDAO;
import DAO.NhanVienDAO;
import ENTITY.NhanVien;
import ENTITY.RememberAccount;
import Helper.Auth;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class LoginForm extends javax.swing.JDialog {

    NhanVienDAO dao = new NhanVienDAO();
    int x, y;
    boolean isRemember = true;

    /**
     * Creates new form LoginForm
     */
    public LoginForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtUser.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtPass.setBackground(new java.awt.Color(0, 0, 0, 1));
        loadRememberAccount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        lblPassWord = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        Disable = new javax.swing.JLabel();
        Show = new javax.swing.JLabel();
        User = new javax.swing.JLabel();
        chkRemember = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/Login.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 400));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 144, 50));

        Exit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Exit.setForeground(new java.awt.Color(204, 255, 255));
        Exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Exit.setText("x");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });
        jPanel2.add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, -10, 30, 40));

        lblUserName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(204, 255, 255));
        lblUserName.setText("Username");
        jPanel2.add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        txtUser.setForeground(new java.awt.Color(255, 255, 255));
        txtUser.setBorder(null);
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });
        jPanel2.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 280, 20));

        lblPassWord.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPassWord.setForeground(new java.awt.Color(204, 255, 255));
        lblPassWord.setText("Password");
        jPanel2.add(lblPassWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 82, -1));

        txtPass.setForeground(new java.awt.Color(255, 255, 255));
        txtPass.setBorder(null);
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });
        jPanel2.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 280, 20));

        Disable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Disable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/invisible_20px.png"))); // NOI18N
        Disable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DisableMouseClicked(evt);
            }
        });
        jPanel2.add(Disable, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 40, 32));

        Show.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/invisible_20px.png"))); // NOI18N
        Show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowMouseClicked(evt);
            }
        });
        jPanel2.add(Show, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 40, 32));

        User.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/user_20px.png"))); // NOI18N
        jPanel2.add(User, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 40, 32));

        chkRemember.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkRemember.setForeground(new java.awt.Color(255, 255, 255));
        chkRemember.setText("Remember Password");
        chkRemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRememberActionPerformed(evt);
            }
        });
        jPanel2.add(chkRemember, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, 40));

        jLabel8.setText("__________________________________________________________");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 280, 39));

        jLabel9.setText("__________________________________________________________");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 280, 40));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Forget Password?");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel10MousePressed(evt);
            }
        });
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 130, 40));

        btnLogin.setBackground(new java.awt.Color(255, 255, 255));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(0, 153, 153));
        btnLogin.setText("LOGIN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 280, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 380, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chkRememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRememberActionPerformed
        // TODO add your handling code here:
        isRemember = chkRemember.isSelected();
    }//GEN-LAST:event_chkRememberActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitMouseClicked

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        this.login();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void ShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowMouseClicked
        // TODO add your handling code here:
        txtPass.setEchoChar((char) 42);
        Disable.setVisible(true);
        Disable.setEnabled(true);
        Show.setVisible(false);
        Show.setEnabled(false);
    }//GEN-LAST:event_ShowMouseClicked

    private void DisableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DisableMouseClicked
        // TODO add your handling code here:
        txtPass.setEchoChar((char) 0);
        Disable.setVisible(false);
        Disable.setEnabled(false);
        Show.setVisible(true);
        Show.setEnabled(true);
    }//GEN-LAST:event_DisableMouseClicked

    private void jLabel10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MousePressed
        // TODO add your handling code here:
        this.openQuenMatKhau();
    }//GEN-LAST:event_jLabel10MousePressed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String user = txtUser.getText();
            String pass = new String(txtPass.getPassword());
            NhanVien nv = dao.selectById(user);
            if (user.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tài khoản");
            } else if (pass.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu");
            } else if (nv == null) {
                JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không tồn tại");
            } else {
                if (nv.getMaNV().equalsIgnoreCase(user) && nv.getMatKhau().equalsIgnoreCase(pass)) {
                    if (isRemember) {
                        AccountDAO.updateRememberAccount(nv.getMaNV(), nv.getMatKhau());
                    } else {
                        AccountDAO.updateRememberAccount("", "");
                    }
                    Auth.user = nv;
                    String vaitro = nv.isVaiTro() ? "Quản lý" : "Nhân viên";
                    String ten = nv.getTenNV();
                    JOptionPane.showMessageDialog(this, "" + vaitro.toUpperCase() + " " + ten.toUpperCase() + " ĐÃ ĐĂNG NHẬP");
                    this.dispose();
                    new LoadingForm(null, true).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không đúng");
                }
            }
        }
    }//GEN-LAST:event_txtPassKeyPressed

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String user = txtUser.getText();
            String pass = new String(txtPass.getPassword());
            NhanVien nv = dao.selectById(user);
            if (user.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tài khoản");
            } else if (pass.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu");
            } else if (nv == null) {
                JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không tồn tại");
            } else {
                if (nv.getMaNV().equalsIgnoreCase(user) && nv.getMatKhau().equalsIgnoreCase(pass)) {
                    if (isRemember) {
                        AccountDAO.updateRememberAccount(nv.getMaNV(), nv.getMatKhau());
                    } else {
                        AccountDAO.updateRememberAccount("", "");
                    }
                    Auth.user = nv;
                    String vaitro = nv.isVaiTro() ? "Quản lý" : "Nhân viên";
                    String ten = nv.getTenNV();
                    JOptionPane.showMessageDialog(this, "" + vaitro.toUpperCase() + " " + ten.toUpperCase() + " ĐÃ ĐĂNG NHẬP");
                    this.dispose();
                    new LoadingForm(null, true).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không đúng");
                }
            }
        }
    }//GEN-LAST:event_txtUserKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginForm dialog = new LoginForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Disable;
    private javax.swing.JLabel Exit;
    private javax.swing.JLabel Show;
    private javax.swing.JLabel User;
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox chkRemember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblPassWord;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
    private void loadRememberAccount() {
        RememberAccount acc = AccountDAO.getRememberAccount();
        txtUser.setText(acc.getUsername());
        txtPass.setText(acc.getPassword());
    }
    void openQuenMatKhau(){
        new QuenMatKhau(null, true).setVisible(true);
    }
    void login() {
        String user = txtUser.getText();
        String pass = new String(txtPass.getPassword());
        NhanVien nv = dao.selectById(user);
        if (user.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tài khoản");
        } else if (pass.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu");
        } else if (nv == null) {
            JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không tồn tại");
        } else {
            if (nv.getMaNV().equalsIgnoreCase(user) && nv.getMatKhau().equalsIgnoreCase(pass)) {
                if (isRemember) {
                    AccountDAO.updateRememberAccount(nv.getMaNV(), nv.getMatKhau());
                } else {
                    AccountDAO.updateRememberAccount("", "");
                }
                Auth.user = nv;
                String vaitro = nv.isVaiTro() ? "Quản lý" : "Nhân viên";
                String ten = nv.getTenNV();
                JOptionPane.showMessageDialog(this, "" + vaitro.toUpperCase() + " " + ten.toUpperCase() + " ĐÃ ĐĂNG NHẬP");
                this.dispose();
                new LoadingForm(null, true).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Tài khoản hoặc mật khẩu không đúng");
            }
        }
    }
}
