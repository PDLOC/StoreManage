/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import ENTITY.ThongKe;
import ENTITY.ThongKeHoaDon;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author huyhoai
 */
public class ThongKeEST extends javax.swing.JFrame {

    ArrayList<ThongKe> ListTK = null;
    Connection cnnn = null;
    DefaultTableModel Model;

    /**
     * Creates new form ThongKeEST
     */
    public ThongKeEST(String nam) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("THỐNG KÊ TOP - Khách Hàng - Sản Phẩm - Nhân Viên");
        NameTableKhachHang();
        NameTableSanPham();
        NameTableNhanVien();
        Connect();
        GetESTKhachHang(nam);
        GetESTSanPham(nam);
        GetESTNhanVien(nam);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    

    void NameTableKhachHang() {
        Model = new DefaultTableModel();
        Model.setColumnIdentifiers(new Object[]{"Tên Khách Hàng", "Số Lần Khách Hàng Mua"});
        tblTKkhachhang.setModel(Model);
    }

    void NameTableSanPham() {
        Model = new DefaultTableModel();
        Model.setColumnIdentifiers(new Object[]{"Tên Sản Phẩm", "Số Lượng Sản Phẩm"});
        tblTKsanpham.setModel(Model);
    }

    void NameTableNhanVien() {
        Model = new DefaultTableModel();
        Model.setColumnIdentifiers(new Object[]{"Tên Nhân Viên", "Số Lần Nhân Viên"});
        tblTKnhanvien.setModel(Model);
    }

    public void Connect() {
        try {
            String user = "edu";
            String pass = "123";
            String url = "jdbc:sqlserver://localhost:1433;databaseName=duan1;encrypt=true;trustServerCertificate=true;";
            cnnn = DriverManager.getConnection(url, user, pass);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTKkhachhang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTKsanpham = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTKnhanvien = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblTKkhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTKkhachhang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TOP 3 Khách Hàng", jPanel1);

        tblTKsanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTKsanpham);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TOP 5 Sản Phẩm", jPanel2);

        tblTKnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblTKnhanvien);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TOP 3 Nhân Viên", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ThongKeEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ThongKeEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ThongKeEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ThongKeEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ThongKeEST tk = new ThongKeEST(String nam);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblTKkhachhang;
    private javax.swing.JTable tblTKnhanvien;
    private javax.swing.JTable tblTKsanpham;
    // End of variables declaration//GEN-END:variables

    public void FillDanhSachToArrayThongke() {
        try {
            String sql = "select Masp,tensp,sum(Soluong) as N'Soluong', sum(tongtien) as N'tongtien' from hoadonchitiet\n"
                    + "group by Masp,tensp";
            Statement st = cnnn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String masp = rs.getString(1);
                String tensp = rs.getString(2);
                int soluong = rs.getInt(3);
//                int dongia = rs.getInt(4);
                long thanhtien = rs.getLong(4);
//                double tt = Double.parseDouble(thanhtien);
                ThongKe tk = new ThongKe(masp, tensp, soluong, thanhtien);
                ListTK.add(tk);
            }
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex + " gi vay ak");
            JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
        }
    }

//    public JFreeChart createChart() {
//        JFreeChart barChart = ChartFactory.createBarChart3D(
//                "BIỂU ĐỒ THỐNG KẾ SẢN PHẨM",
//                "SẢN PHẨM", "SỐ LƯỢNG",
//                createDataset(), PlotOrientation.VERTICAL, true, true, true);
//        return barChart;
//    }
//    
//    public int getcountList() {
////        tblModel = (DefaultTableModel) tblDoanhThu.getModel();
//        int count = ListTK.size();
//        return count;
//    }
//    
//    public CategoryDataset createDataset() {
////        tblModel = (DefaultTableModel) tblDoanhThu.getModel();
////        int count = tblModel.getRowCount();
//        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        for (int i = 0; i < ListTK.size(); i++) {
//            dataset.addValue((Number) ListTK.get(i).getSoluong(), "SỐ LƯỢNG",(Comparable) ListTK.get(i).getMaSP());
//        }
//        return dataset;
//    }
//    
//    public void RunBieuDo() {
////        ChartPanel chartPanel = new ChartPanel(createChart());
////        chartPanel.setPreferredSize(new java.awt.Dimension(540, 300));
////        chartPanel.setVisible(true);
////        chartPanel.setName("Biểu Đồ Thống Kê");
////        ChartFrame chartframe = new ChartFrame("Biểu Đồ Thống Kê", createChart(),true);
////        chartframe.setVisible(true);
////        chartframe.setSize(550,300);
//        ChartPanel charpanel = new ChartPanel(createChart());
//        pnlBieudo.removeAll();
//        pnlBieudo.add(charpanel);
//        pnlBieudo.setVisible(true);
//        pnlBieudo.updateUI();
//        
////        JTabbedPane td = new JTabbedPane();
////        td.setName("Biểu Đồ");
////        td.add(chartPanel);
////        pnlthongke.add(chartPanel);
////        tbpdoanhthu.add(chartPanel);
//
////        JFrame frame = new JFrame();
////        frame.add(chartPanel);
////        frame.setTitle("Biểu đồ JFreeChart trong Java Swing");
////        frame.setSize(600, 400);
////        frame.setLocationRelativeTo(null);
////        frame.setResizable(false);
////        frame.setVisible(true);
////        return chartPanel;
//    }
    public void GetESTKhachHang(String nam) {

        try {
            ListTK = new ArrayList<>();
            String sql = "{call sp_ESTKhachMua(?)}";
            PreparedStatement st = cnnn.prepareStatement(sql);
            st.setString(1, nam);
            ResultSet rs = st.executeQuery();
//            String tenkh = null;
//            String slkm = null;
            while (rs.next()) {
                String tenkh = rs.getString(1);
                String slkm = rs.getString(2);
                ThongKe tk = new ThongKe(tenkh, slkm);
                ListTK.add(tk);
            }
            rs.close();
            st.close();
            try {
                Model = (DefaultTableModel) tblTKkhachhang.getModel();
                Model.setRowCount(0);
                for (ThongKe TE : ListTK) {
                    Model.addRow(new Object[]{
                        TE.getTenkh(), TE.getSlkm()
                    });
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    public void GetESTSanPham(String nam) {
        try {
            ListTK = new ArrayList<>();
            String sql = "{call sp_ESTSanPham(?)}";
            PreparedStatement st = cnnn.prepareStatement(sql);
            st.setString(1, nam);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                String tensp = rs.getString(1);
                String slsp = rs.getString(2);
                ThongKe tk = new ThongKe(tensp, slsp);
                ListTK.add(tk);
            }
            rs.close();
            st.close();
            try {
                Model = (DefaultTableModel) tblTKsanpham.getModel();
                Model.setRowCount(0);
                for (ThongKe TE : ListTK) {
                    Model.addRow(new Object[]{
                        TE.getTenkh(), TE.getSlkm()
                    });
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void GetESTNhanVien(String nam) {
        try {
            ListTK = new ArrayList<>();
            String sql = "{call sp_ESTNhanVien(?)}";
            PreparedStatement st = cnnn.prepareStatement(sql);
            st.setString(1, nam);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                String tennv = rs.getString(1);
                String slnv = rs.getString(2);
                ThongKe tk = new ThongKe(tennv, slnv);
                ListTK.add(tk);
            }
            rs.close();
            st.close();
            try {
                Model = (DefaultTableModel) tblTKnhanvien.getModel();
                Model.setRowCount(0);
                for (ThongKe TE : ListTK) {
                    Model.addRow(new Object[]{
                        TE.getTenkh(), TE.getSlkm()
                    });
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

}
